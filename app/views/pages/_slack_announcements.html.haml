- slack_announcement = Slack.new
- sections = slack_announcement

- if sections.blank?
  %p.center Announcements temporarily unavailable - please check back later!
  %br
- else
  .slack__header Slack #announcements
  .slack__announcements
    - sections.response["messages"].each do |message|
      :ruby
        text = message["text"]
        text = text.gsub(/<#(\w+)\|([\w-]+)>/) do |_|
          match = Regexp.last_match
          "<a href=\"https://brickhackv.slack.com/messages/#{match[1]}/\" target=\"_blank\">##{match[2]}</a>"
        end
        text = text.gsub(/<(https?:\/\/.+)\|(.+)>/) do |_|
          match = Regexp.last_match
          "<a href=\"#{match[1]}\" target=\"_blank\">#{match[2]}</a>"
        end
        text = text.gsub(/<(https?:\/\/.*)>/) do |_|
          match = Regexp.last_match
          "<a href=\"#{match[1]}\" target=\"_blank\">#{match[1]}</a>"
        end
      .slack__announcement
        %span.slack__time= Time.at(message["ts"].to_i).strftime('%l:%M %P')
        - if !message["attachments"].nil?
          - if !message["attachments"][0]["image_url"].nil?
            .slack__image
              %img{src: message["attachments"][0]["image_url"]}
        = text.html_safe
